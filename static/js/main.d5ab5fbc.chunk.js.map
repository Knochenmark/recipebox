{"version":3,"sources":["assets/cooking04.jpg","assets/cooking01.jpg","actions/RecipeActions.ts","_domain/Difficulty.ts","_config/exampleRecipeList.ts","_domain/TabBarItem.ts","_domain/LocalStorageWrapper.ts","RecipeReducer.ts","components/Icons/Bug.tsx","components/IconButton/IconButttonColor.ts","components/BookmarkList/BookmarkListStyles.ts","components/BookmarkList/BookmarkList.tsx","components/Chip/Chip.tsx","components/Chip/ChipStyles.ts","components/IconButton/IconButtonStyles.ts","components/IconButton/IconButton.tsx","components/Icons/Bookmark.tsx","components/Icons/Danger.tsx","components/Icons/Plus.tsx","components/IndexList/IndexListStyles.ts","components/IndexList/IndexList.tsx","components/Icons/Cross.tsx","components/SearchBar/SearchBarStyles.ts","components/SearchBar/SearchBar.tsx","components/TabBar/TabBarStyles.ts","components/TabBar/TabBar.tsx","components/IndexPage/IndexPageStyles.ts","components/IndexPage/IndexPage.tsx","components/Icons/Help.tsx","components/Icons/Remove.tsx","components/ConfirmationButton/ConfirmationButtonStyles.ts","components/ConfirmationButton/ConfirmationButton.tsx","components/Icons/Edit.tsx","components/Icons/HeartFilled.tsx","components/Icons/HeartOutlined.tsx","components/Icons/Left.tsx","components/Recipe/RecipeStyles.ts","components/Recipe/Recipe.tsx","components/RecipeForm/RecipeFormStyles.ts","components/RecipeForm/RecipeValidationSchema.ts","components/RecipeForm/RecipeForm.tsx","components/RecipeBook/RecipeBookStyles.ts","components/RecipeBook/RecipeBook.tsx","registerServiceWorker.ts","index.tsx"],"names":["module","exports","actionTypes","Difficulty","setIndexVisibilityAction","isIndexVisible","type","SET_INDEX_VISIBILITY","setEditModeAction","isEditMode","SET_EDIT_MODE","setSelectedRecipeAction","recipeName","SET_SELECTED_RECIPE","TabBarItem","exampleRecipeList","cookingTime","difficulty","BEGINNER","imageUrl","ingredients","instructions","isBookmarked","name","preparationTime","ADVANCED","EXPERT","emptyRecipe","LocalStorageWrapper","prefix","key","item","localStorage","setItem","this","prefixKey","JSON","stringify","getItem","parse","LocalStorage","storageRecipeList","initialRecipeList","length","initialState","recipes","searchValue","selectedRecipe","selectedTab","RECIPES","getRecipes","state","getBookmarkedRecipes","filter","r","getSelectedRecipe","getEditMode","getIndexVisibility","getSearchValue","getSelectedTab","action","SET_SELECTED_TAB","setSelectedTabAction","SET_SEARCH_VALUE","setSearchValueAction","CREATE_RECIPE","undefined","DELETE_RECIPE","deleteRecipeAction","newRecipeList","recipe","find","UPDATE_RECIPE","map","SET_BOOKMARK","newRecipes","bookmarkedRecipe","SAVE_RECIPE","RESET_ALL_RECIPES","Bug","props","width","height","viewBox","d","IconButtonColor","bookmarkListItemStyle","style","$nest","flexBasis","padding","marginTop","alignItems","display","flexWrap","bookmarkListRecipeStyle","color","cursor","textDecoration","listStyle","BookmarkListComponent","bookmarkedRecipes","i","toLowerCase","includes","indices","toUpperCase","v","a","indexOf","obj","forEach","hasOwnProperty","push","indexItems","sort","index","recipeItems","onClick","setSelectedRecipe","bind","className","emptyBookmarkList","emptySearchResultList","React","BookmarkList","connect","ownProps","dispatch","Chip","active","onclickHandler","setState","onClickCallback","userSelect","justifyContent","fontSize","fontWeight","border","borderRadius","backgroundColor","icon","chipText","iconButtonStyle","background","margin","outline","overflow","iconButtonIconStyle","fill","borderBottomLeftRadius","borderTopLeftRadius","lineHeight","textAlign","iconButtonTextStyle","borderBottomRightRadius","borderTopRightRadius","position","transition","IconButton","buttonType","isSubmitButton","callback","buttonStyles","styles","buttonText","Bookmark","Danger","Plus","indexListItemStyle","indexListRecipeStyle","IndexListComponent","emptyIndexList","IndexList","Cross","searchBarStyle","borderBottom","fontFamily","minWidth","searchbarHighlightStyle","borderTop","bottom","left","maxWidth","searchBarClearStyle","top","right","SearchBarComponent","searchValueInputSubject","Subject","onChange","onClear","pipe","debounceTime","trim","subscribe","value","setSearchValue","event","target","next","str","placeholder","spellCheck","replace","SearchBar","tabBarStyle","tabBarItemStyle","marginRight","TabBarComponent","tabItemList","BOOKMARKS","tabs","tab","setSelectedTab","TabBar","activeTab","indexPageStyle","flexDirection","backgroundImage","cookingImage","backgroundRepeat","backgroundSize","zIndex","indexPageContentStyle","indexPageBackgroundStyle","pointerEvents","dangerButtonStyle","chipContainerStyle","IndexPageComponent","headline","console","log","resetAllRecipes","RED","createRecipe","GREEN","IndexPage","Help","Remove","fillRule","clipRule","confirmationButtonStyle","confirmationButtonIconStyle","transform","content","confirmationButtonTextStyle","ConfirmationButton","defaultText","status","reset","setTimeout","onConfirmCallback","Edit","HeartFilled","HeartOutlined","Left","recipeStyle","minHeight","recipeContentStyle","recipeOverlayStyle","recipeTitleStyle","marginBottom","recipeImageStyle","timingWrapperStyle","textTransform","recipeIngredientStyle","recipeInstructionStyle","whiteSpace","buttonWrapperStyle","RecipeComponent","bookmarkHandler","bookmarkRecipe","ingredientList","ingredient","ImageStyle","showIndex","getBookmarkText","setEditMode","deleteRecipe","Recipe","setBookmarkAction","recipeFormContentStyle","formStyle","recipeFormFieldStyle","resize","recipeFormFieldInputStyle","recipeFormIngredientIconStyle","RecipeValidationSchema","Yup","shape","min","max","required","matches","RecipeFormComponent","saveRecipe","cancelHandler","formValues","Number","updateRecipeAction","saveRecipeAction","disableEditMode","difficultyOptions","Object","keys","initialValues","String","validationSchema","onSubmit","render","formikBag","field","form","htmlFor","touched","errors","rows","arrayHelpers","values","remove","RecipeForm","recipeBookStyle","overflowY","overflowX","bugStyle","RecipeBookComponent","setRecipeName","recipeContainerClass","href","title","RecipeBook","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","recipeReducer","getState","unsubscribe","ReactDOM","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d5ab5fbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cooking04.699b9b10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cooking01.6427e47b.jpg\";","import { IRecipe } from '../_domain/IRecipe';\r\nimport { TabBarItem } from '../_domain/TabBarItem';\r\n\r\nexport enum actionTypes {\r\n  CREATE_RECIPE = '[Recipe] Create Recipe',\r\n  DELETE_RECIPE = '[Recipe] Delete Recipe',\r\n  SET_EDIT_MODE = '[Recipe] Set Edit Mode',\r\n  SET_INDEX_VISIBILITY = '[Recipe] Set Index Visibility',\r\n  SET_BOOKMARK = '[Recipe] Bookmark Recipe',\r\n  SET_SELECTED_RECIPE = '[Recipe] Set selected Recipe',\r\n  UPDATE_RECIPE = '[Recipe] Update Recipe',\r\n  SAVE_RECIPE = '[Recipe] Save Recipe',\r\n  SET_SEARCH_VALUE = '[Recipe] Set Search Value',\r\n  SET_SELECTED_TAB = '[Recipe] Set Selected Tab',\r\n  RESET_ALL_RECIPES = '[Recipe] Reset all Recipes'\r\n}\r\n\r\nexport interface IResetAllRecipesAction{\r\n  type: string;\r\n}\r\n\r\nexport interface ISetSelectedTabAction {\r\n  selectedTab: TabBarItem;\r\n  type: string;\r\n}\r\n\r\nexport interface ISetSearchValueAction {\r\n  searchValue: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ISetBookmarkAction {\r\n  isBookmarked: boolean;\r\n  recipeName: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ISetIndexVisibilityAction {\r\n  isIndexVisible: boolean;\r\n  type: string;\r\n}\r\n\r\nexport interface ISetEditModeAction {\r\n  isEditMode: boolean;\r\n  type: string;\r\n}\r\n\r\nexport interface ICreateRecipeAction {\r\n  type: string;\r\n}\r\n\r\nexport interface IDeleteRecipeAction {\r\n  recipe: IRecipe;\r\n  type: string;\r\n}\r\n\r\nexport interface ISetSelectedRecipeAction {\r\n  recipeName: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IUpdateRecipeAction {\r\n  recipe: IRecipe;\r\n  recipeName: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ISaveRecipeAction {\r\n  recipe: IRecipe;\r\n  type: string;\r\n}\r\n\r\nexport const resetAllRecipesAction = () => ({\r\n  type: actionTypes.RESET_ALL_RECIPES\r\n})\r\n\r\nexport const setSelectedTabAction = (selectedTab: TabBarItem) => ({\r\n  selectedTab,\r\n  type: actionTypes.SET_SELECTED_TAB\r\n})\r\n\r\nexport const setSearchValueAction = (searchValue: string) => ({\r\n  searchValue,\r\n  type: actionTypes.SET_SEARCH_VALUE\r\n})\r\n\r\nexport const setBookmarkAction = (recipeName: string, isBookmarked: boolean) => ({\r\n  isBookmarked,\r\n  recipeName,\r\n  type: actionTypes.SET_BOOKMARK\r\n});\r\n\r\nexport const updateRecipeAction = (recipe: IRecipe, recipeName: string) => ({\r\n  recipe,\r\n  recipeName,\r\n  type: actionTypes.UPDATE_RECIPE\r\n});\r\n\r\nexport const setIndexVisibilityAction = (isIndexVisible: boolean) => ({\r\n  isIndexVisible,\r\n  type: actionTypes.SET_INDEX_VISIBILITY\r\n});\r\n\r\nexport const setEditModeAction = (isEditMode: boolean) => ({\r\n  isEditMode,\r\n  type: actionTypes.SET_EDIT_MODE\r\n});\r\n\r\nexport const createRecipeAction = () => ({\r\n  type: actionTypes.CREATE_RECIPE\r\n});\r\n\r\nexport const saveRecipeAction = (recipe: IRecipe) => ({\r\n  recipe,\r\n  type: actionTypes.SAVE_RECIPE\r\n});\r\n\r\nexport const deleteRecipeAction = (recipe: IRecipe) => ({\r\n  recipe,\r\n  type: actionTypes.DELETE_RECIPE\r\n});\r\n\r\nexport const setSelectedRecipeAction = (recipeName: string) => ({\r\n  recipeName,\r\n  type: actionTypes.SET_SELECTED_RECIPE\r\n});\r\n\r\nexport type Action\r\n  = ICreateRecipeAction\r\n  | IDeleteRecipeAction\r\n  | ISetEditModeAction\r\n  | ISetIndexVisibilityAction\r\n  | ISetSelectedRecipeAction\r\n  | IUpdateRecipeAction\r\n  | ISetBookmarkAction\r\n  | ISaveRecipeAction\r\n  | ISetSearchValueAction\r\n  | ISetSelectedTabAction\r\n  | IResetAllRecipesAction;\r\n","export enum Difficulty {\r\n  ADVANCED = 'Advanced',\r\n  BEGINNER = 'Beginner',\r\n  EXPERT = 'Expert',\r\n}\r\n","import { Difficulty } from '../_domain/Difficulty';\r\nimport { IRecipe } from '../_domain/IRecipe';\r\n\r\nexport const exampleRecipeList: IRecipe[] = [\r\n  {\r\n    cookingTime: 25,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://images.pexels.com/photos/539451/pexels-photo-539451.jpeg',\r\n    ingredients: [\r\n      '1kg Tomatoes',\r\n      '2 Onions',\r\n      '3 Garlic cloves',\r\n      'Olive oil',\r\n      '750ml stock',\r\n      'Salt & Pepper',\r\n      'Thymian, dried',\r\n      '3 Teaspoons Tomato paste',\r\n      'Parsley',\r\n    ],\r\n    instructions: `Carefully remove the tomato skin by cutting a cross into the tomatoes and pouring hot water over them. Then cut the tomatoes into small pieces. Also cut the onions into small cubes and press the garlic cloves.\r\n\r\n    Heat the olive oil in a pot and roast onions and garlic for about 3min. Then add the tomato pieces. After a few minutes add the stock and spices (except the parsley). Cook everything on low temperature for about 20 minutes.\r\n\r\n    Add the tomato paste and use a immersion blender to mash the tomato pieces.\r\n\r\n    Finally salt to your taste and serve with a little parsley.`,\r\n    isBookmarked: false,\r\n    name: 'Tomato soup',\r\n    preparationTime: 20,\r\n  },\r\n  {\r\n    cookingTime: 25,\r\n    difficulty: Difficulty.ADVANCED,\r\n    imageUrl: 'https://images.pexels.com/photos/209540/pexels-photo-209540.jpeg',\r\n    ingredients: [\r\n      '650g fresh sea fish',\r\n      '75g Shrimps',\r\n      '50g Crayfish',\r\n      'Soup greens',\r\n      '1 Onion',\r\n      '½ Chilipepper',\r\n      '1 Garlic clove',\r\n      '1 Tablespoon butter',\r\n      '1 Teaspoon lobster paste',\r\n      '200g Creme fraiche',\r\n      '400ml fish stock',\r\n      'Whitewine',\r\n      '1 lemon',\r\n      'Dill',\r\n      'Salt',\r\n    ],\r\n    instructions: `Cut the soup green and the onion into small cubes. Chop the chili pepper and garlic clove.\r\n\r\n    Heat everything with some butter and deglaze it with about 200ml of the whitewine. Let it cook for a little while.\r\n\r\n    Add fish stock with the same amount of water. Then stir in the creme fraiche and the lobster paste. Salt it to your taste and boil everything up.\r\n\r\n    Cut the fish into small pieces and add it together with the shrimps and crayfish. Cook everything on low heat for about 15minutes.\r\n\r\n    Serve with lemon quarters and fresh cut dill.`,\r\n    isBookmarked: false,\r\n    name: 'Fish soup',\r\n    preparationTime: 35,\r\n  },\r\n  {\r\n    cookingTime: 60,\r\n    difficulty: Difficulty.EXPERT,\r\n    imageUrl: 'https://images.pexels.com/photos/1126359/pexels-photo-1126359.jpeg',\r\n    ingredients: [\r\n      '200g flour',\r\n      '300g Sugar',\r\n      '200g margarine',\r\n      '4 eggs',\r\n      '½ backing powder',\r\n      '1 vanilla sugar',\r\n      '1 vanilla pudding powder',\r\n      '1 Tablespoon butter',\r\n      '1 Teaspoon lobster paste',\r\n      '500g quark',\r\n      '200g sour cream',\r\n      '200g sweet cream',\r\n    ],\r\n    instructions: `For the shortcrust pastry:\r\n\r\n    Add 200g flour, 75g sugar, 75g margarine and 1 egg into a bowl, mix it and knead everything together quickly.\r\n\r\n    Put the dough into a springform pan and raise the edge about 2-3cm in the form.\r\n\r\n    For the filling:\r\n\r\n    Add 125g margarine, 225g sugar, vanilla sugar, vanilla pudding powder and 3 eggs into a bowl and mix everything.\r\n\r\n    Then mix in the quark and sour cream. Whip the sweet cream and mix it in too.\r\n\r\n    Pre heat the oven to 180°C top/bottom heat.\r\n\r\n    Add the filling into the springform pan, even out the surface and bake it for 1hour.`,\r\n    isBookmarked: false,\r\n    name: 'Cheese cake',\r\n    preparationTime: 30,\r\n  },\r\n  {\r\n    cookingTime: 30,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://ichef.bbci.co.uk/food/ic/food_16x9_832/recipes/cornbread_86386_16x9.jpg',\r\n    ingredients: [\r\n      '375g plain flour',\r\n      '225g cornmeal',\r\n      '1 tsp salt',\r\n      '4 tsp baking powder',\r\n      '110g sugar',\r\n      '480ml oz milk',\r\n      '2 free-range eggs',\r\n      '110g butter, melted, plus extra for greasing',\r\n      'small tin sweetcorn kernels, drained (or use fresh sweetcorn)',\r\n    ],\r\n    instructions: `\r\n    Preheat the oven to 200C/Gas 6. Grease 23cm square baking pan with melted butter.\r\n\r\n    In a large bowl, combine all the ingredients together except for the sweetcorn kernels. Mix until you have the consistency of a sponge cake batter, then add the sweetcorn.\r\n\r\n    Stir to combine thoroughly, then pour into the prepared baking pan. Bake for about 20 minutes in the top of the oven. (Alternatively, you can bake these in a muffin tray lined with paper cases.)\r\n\r\n    The cornbread is ready when it has a golden colour and is springy to the touch. Allow to cool slightly before cutting.`,\r\n    isBookmarked: false,\r\n    name: 'Cornbread',\r\n    preparationTime: 30,\r\n  },\r\n  {\r\n    cookingTime: 40,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://c1.staticflickr.com/4/3496/3903180442_8ec5a4de0a_b.jpg',\r\n    ingredients: [\r\n      '8 medium leeks, (about 3 pounds), whites and light-green parts only, quartered lengthwise and halved crosswise, cleaned',\r\n      '1 1/2 pounds salmon fillet, halved lengthwise then crosswise',\r\n      '2 tablespoons olive oil',\r\n      'coarse salt and freshly ground pepper',\r\n      'lemon wedges, for serving',\r\n    ],\r\n    instructions: `\r\n    Preheat oven to 450 degrees. On a large rimmed baking sheet, toss leeks with oil; season with salt and pepper. Roast, tossing once, until beginning to soften, 12 to 15 minutes.\r\n\r\n    Remove leeks from oven, toss with pan juices to coat, and push to edges of baking sheet. Arrange salmon pieces in center, and season generously with salt and pepper.\r\n\r\n    Return to oven; roast until salmon is just opaque throughout, 10 to 15 minutes (depending on thickness). Serve salmon with leeks and lemon wedges.`,\r\n    isBookmarked: false,\r\n    name: 'Salmon with leeks',\r\n    preparationTime: 10,\r\n  },\r\n  {\r\n    cookingTime: 15,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://www.maxpixel.net/static/photo/1x/Green-Vegetables-Beets-Purple-2861272.jpg',\r\n    ingredients: [\r\n      '1 can (16 ounces) sliced or diced beets',\r\n      '2 tablespoons sugar',\r\n      '1 tablespoon cornstarch',\r\n      '1/4 teaspoon salt',\r\n      '3 to 4 tablespoons white vinegar',\r\n      '2 tablespoons butter',\r\n    ],\r\n    instructions: `\r\n    Drain beets, reserving 1/3 cup juice. In a saucepan, combine the sugar, cornstarch and salt. Stir in beet juice and vinegar; cook and stir over medium-high heat until thickened and bubbly. Cook and stir 2 minutes more. Add beets and butter; heat through.`,\r\n    isBookmarked: false,\r\n    name: 'Glazed beets',\r\n    preparationTime: 15,\r\n  },\r\n  {\r\n    cookingTime: 30,\r\n    difficulty: Difficulty.ADVANCED,\r\n    imageUrl: 'https://c2.staticflickr.com/4/3252/3287806712_4e06886279_z.jpg',\r\n    ingredients: [\r\n      '3 cups elbow macaroni, uncooked',\r\n      '2 tablespoons butter',\r\n      '2 tablespoons flour',\r\n      '1 cup half n half (warmed)',\r\n      '3½ cups Colby Jack cheese, shredded & divided',\r\n      '½ cup Smoked Cheddar cheese, shredded & divided',\r\n      '1½ cups whole milk',\r\n      '2 eggs, slightly beaten',\r\n      'salt & pepper',\r\n    ],\r\n    instructions: `\r\n    Preheat oven to 350 F.\r\n\r\n    Butter an 8x10 casserole dish. Set aside.\r\n\r\n    Bring a large pot of seasoned water to a boil. (I season my water generously with salt, pepper, and garlic powder. It should taste a bit salty)\r\n\r\n    Cook pasta until a little under al dente ( about 7 minutes)\r\n\r\n    Drain and set aside.\r\n\r\n    In a large saucepan, over medium heat, melt butter.\r\n\r\n    Whisk in flour and continue stirring until golden.\r\n\r\n    Slowly whisk in half n half.\r\n\r\n    Continue stirring until smooth.\r\n\r\n    Stir in 1 cup Colby Jack cheese until sauce is creamy.\r\n\r\n    Pour cheese sauce over macaroni, tossing to coat.\r\n\r\n    Pour macaroni into prepared pan. Set aside.\r\n\r\n    In a large bowl, add milk, 2 cups Colby Jack cheese, and ¼ cup Smoked Cheddar.\r\n\r\n    Taste mixture and add salt and pepper until the mixture tastes seasoned to your liking.\r\n\r\n    Add in eggs and stir well to make sure the eggs are mixed in.\r\n\r\n    Pour egg mixture over the macaroni. (Use a spatula to help push the mixture throughout so that everything isn't just sitting on top). (see note)\r\n\r\n    Sprinkle the top with remaining cheeses. (I never need all of it)\r\n    Bake for 30-35 minutes. (may not need this long so check on it at the 25-minute mark)\r\n\r\n    Let sit for 10 minutes before serving.`,\r\n    isBookmarked: false,\r\n    name: 'Creamy baked macaroni and cheese',\r\n    preparationTime: 10,\r\n  },\r\n  {\r\n    cookingTime: 10,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/Koukouvagia.jpg/220px-Koukouvagia.jpg',\r\n    ingredients: [\r\n      'oregano',\r\n      'salt',\r\n      'pepper',\r\n      'olive oil',\r\n      '60g (2.2 oz) feta cheese',\r\n      '1 large tomatoe',\r\n      '1 barley rusk',\r\n    ],\r\n    instructions: `Splash a bit of water on the barley and allow it to moisten a bit.\r\n\r\n  Either grate the tomato with a large grate or chop it up in very small pieces, and then drain the liquid, then add a little salt.\r\n\r\n  Crumble the feta cheese.\r\n\r\n  Place the rusk on a plate and spread the grated/chopped tomato on the rusk and then add top it with the crumbled feta cheese.\r\n\r\n  Sprinkle a bit of pepper and oregano over the Feta cheese and then pour a touch of olive oil over it.`,\r\n    isBookmarked: false,\r\n    name: 'Dakos',\r\n    preparationTime: 5,\r\n  },\r\n  {\r\n    cookingTime: 25,\r\n    difficulty: Difficulty.ADVANCED,\r\n    imageUrl: 'https://images.unsplash.com/photo-1473093295043-cdd812d0e601?auto=format&fit=crop&w=2000&q=80',\r\n    ingredients: [\r\n      '1 lb. farfalle pasta',\r\n      '2 cups fresh basil leaves',\r\n      '1/2 cup fresh grated romano or parmesan-reggiano cheese',\r\n      '1/2 cup extra virgin olive oil',\r\n      '1/3 cup pine nuts',\r\n      '3 garlic cloves, minced',\r\n      'kosher salt',\r\n      'ground black pepper',\r\n      '1 pint cherry tomatoes',\r\n      'spring mix greens',\r\n    ],\r\n    instructions: `Cook the pasta according to the package instructions. Drain the pasta, reserving 1/2 cup of the pasta water.  Return the pasta to the pot.\r\n\r\n  Using a food processor, pulse the basil and pine nuts several times.  Add cheese and garlic and continue to mix.  Using a spatula, scrape down the sie of the food processor.\r\n\r\n  Stream in the olive oil slowly while running the food processor.  Occasionally stop to scrape the sides.  Stir in salt and fresh ground black pepper to taste.\r\n\r\n  Add the completed basil mixture and reserved pasta water to the pot; toss the pasta to coat fully. Fold in the tomatoes and sprinkle lightly with pepper, then serve on a bed of mixed greens.`,\r\n    isBookmarked: false,\r\n    name: 'Pesto and Tomato Pasta',\r\n    preparationTime: 10,\r\n  },\r\n  {\r\n    cookingTime: 10,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://images.pexels.com/photos/574111/pexels-photo-574111.jpeg?auto=compress',\r\n    ingredients: [\r\n      '1 1/2 cups (195 grams) all-purpose flour',\r\n      '2 tablespoons sugar',\r\n      '1 tablespoon baking powder',\r\n      '3/4 teaspoon kosher salt or 1/2 teaspoon of fine sea or table salt',\r\n      '1 1/4 cups (295 ml) milk, dairy and non-dairy both will work',\r\n      '1 large egg',\r\n      '4 tablespoons unsalted butter, melted, plus more for skillet',\r\n      '1 teaspoon vanilla extract',\r\n      'maple syrup (optionally)',\r\n    ],\r\n    instructions: `In a large bowl, mix flour, sugar, baking powder and salt. Make a well in the center, and pour in milk, egg and oil. Mix until smooth.\r\n\r\n    Heat a lightly oiled griddle or frying pan over medium high heat. Pour or scoop the batter onto the griddle, using approximately 1/4 cup for each pancake`,\r\n    isBookmarked: false,\r\n    name: 'Pancakes',\r\n    preparationTime: 15,\r\n  },\r\n  {\r\n    cookingTime: 35,\r\n    difficulty: Difficulty.BEGINNER,\r\n    imageUrl: 'https://images.media-allrecipes.com/userphotos/600x600/1003056.jpg',\r\n    ingredients: [\r\n      '1 pound bacon',\r\n      '1 large head cabbage, chopped',\r\n      '1 large onion, chopped',\r\n      '1 (8 ounce) package sliced fresh mushrooms',\r\n      '60g (2.2 oz) feta cheese',\r\n      'salt and ground black pepper to taste',\r\n    ],\r\n    instructions: `Place bacon in a large skillet and cook over medium-high heat, turning occasionally, until evenly browned, about 10 minutes. Drain the bacon slices on paper towels; crumble when cooled. Drain all but 3 tablespoons of bacon drippings from skillet.\r\n    Cook and stir cabbage, onion, and mushrooms in the remaining bacon drippings until tender and lightly browned, about 20 minutes. Fold bacon into cabbage mixture. Season with salt and black pepper.`,\r\n    isBookmarked: false,\r\n    name: 'Southern Fried Cabbage with Bacon, Mushrooms, and Onions',\r\n    preparationTime: 10,\r\n  },\r\n];\r\n\r\nexport const emptyRecipe: IRecipe = {\r\n  cookingTime: 0,\r\n  difficulty: Difficulty.BEGINNER,\r\n  imageUrl: '',\r\n  ingredients: [],\r\n  instructions: '',\r\n  isBookmarked: false,\r\n  name: '',\r\n  preparationTime: 0,\r\n};\r\n","export enum TabBarItem {\r\n  RECIPES = 'Recipes',\r\n  BOOKMARKS = 'Bookmarks'\r\n}\r\n","export class LocalStorageWrapper {\r\n  private prefix = '_knochenmark_';\r\n\r\n  public setItem(key: string, item: any) {\r\n    localStorage.setItem(this.prefixKey(key), JSON.stringify(item));\r\n  }\r\n\r\n  public getItem(key: string) {\r\n    const item: any = localStorage.getItem(this.prefixKey(key));\r\n    return JSON.parse(item);\r\n  }\r\n\r\n  private prefixKey(key: string) {\r\n    return `${this.prefix}${key}`;\r\n  }\r\n}\r\n","import { exampleRecipeList } from './_config/exampleRecipeList';\r\nimport { IRecipe } from './_domain/IRecipe';\r\nimport { IStoreState } from './_domain/IStoreState';\r\nimport { LocalStorageWrapper } from './_domain/LocalStorageWrapper';\r\nimport { TabBarItem } from './_domain/TabBarItem';\r\nimport {\r\n  Action,\r\n  actionTypes,\r\n  IDeleteRecipeAction,\r\n  ISaveRecipeAction,\r\n  ISetBookmarkAction,\r\n  ISetEditModeAction,\r\n  ISetIndexVisibilityAction,\r\n  ISetSearchValueAction,\r\n  ISetSelectedRecipeAction,\r\n  ISetSelectedTabAction,\r\n  IUpdateRecipeAction\r\n} from './actions/RecipeActions';\r\n\r\nconst LocalStorage = new LocalStorageWrapper();\r\nconst storageRecipeList = LocalStorage.getItem('recipes');\r\nconst initialRecipeList = storageRecipeList ? storageRecipeList : exampleRecipeList;\r\nif (!storageRecipeList || storageRecipeList.length === 0) {\r\n  LocalStorage.setItem('recipes', exampleRecipeList);\r\n}\r\n\r\nexport const initialState: IStoreState = {\r\n  isEditMode: false,\r\n  isIndexVisible: true,\r\n  recipes: initialRecipeList,\r\n  searchValue: '',\r\n  selectedRecipe: initialRecipeList[0],\r\n  selectedTab: TabBarItem.RECIPES,\r\n}\r\n\r\nconst recipes = (state: IStoreState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SELECTED_TAB:\r\n      const setSelectedTabAction = action as ISetSelectedTabAction;\r\n      return {\r\n        ...state,\r\n        selectedTab: setSelectedTabAction.selectedTab\r\n      }\r\n    case actionTypes.SET_SEARCH_VALUE:\r\n      const setSearchValueAction = action as ISetSearchValueAction;\r\n      return {\r\n        ...state,\r\n        searchValue: setSearchValueAction.searchValue\r\n      }\r\n    case actionTypes.SET_INDEX_VISIBILITY:\r\n      const setIndexVisibilityAction = action as ISetIndexVisibilityAction;\r\n      return {\r\n        ...state,\r\n        isEditMode: false,\r\n        isIndexVisible: setIndexVisibilityAction.isIndexVisible\r\n      };\r\n    case actionTypes.SET_EDIT_MODE:\r\n      const { isEditMode } = action as ISetEditModeAction;\r\n      return {\r\n        ...state,\r\n        isEditMode,\r\n      };\r\n    case actionTypes.CREATE_RECIPE:\r\n      return {\r\n        ...state,\r\n        isEditMode: true,\r\n        isIndexVisible: false,\r\n        selectedRecipe: undefined,\r\n      };\r\n    case actionTypes.DELETE_RECIPE: {\r\n      const deleteRecipeAction = action as IDeleteRecipeAction;\r\n      const newRecipeList = state.recipes.filter(r =>\r\n        r.name !== deleteRecipeAction.recipe.name\r\n      );\r\n      LocalStorage.setItem('recipes', newRecipeList);\r\n      return {\r\n        ...state,\r\n        isIndexVisible: true,\r\n        recipes: newRecipeList,\r\n        selectedRecipe: undefined,\r\n      };\r\n    }\r\n    case actionTypes.SET_SELECTED_RECIPE: {\r\n      const { recipeName } = action as ISetSelectedRecipeAction;\r\n      return {\r\n        ...state,\r\n        isIndexVisible: false,\r\n        selectedRecipe: state.recipes.find(recipe => recipe.name === recipeName),\r\n      };\r\n    }\r\n    case actionTypes.UPDATE_RECIPE: {\r\n      const { recipe, recipeName } = action as IUpdateRecipeAction;\r\n      const newRecipeList = state.recipes.map(r => {\r\n        return r.name === recipeName ? recipe : r;\r\n      });\r\n      LocalStorage.setItem('recipes', newRecipeList);\r\n      return {\r\n        ...state,\r\n        isEditMode: false,\r\n        recipes: newRecipeList,\r\n        selectedRecipe: recipe\r\n      };\r\n    }\r\n    case actionTypes.SET_BOOKMARK: {\r\n      const { recipeName, isBookmarked } = action as ISetBookmarkAction;\r\n      let selectedRecipe;\r\n      const newRecipes = state.recipes.map(r => {\r\n        let bookmarkedRecipe;\r\n        if (r.name === recipeName) {\r\n          bookmarkedRecipe = { ...r };\r\n          selectedRecipe = bookmarkedRecipe;\r\n          bookmarkedRecipe.isBookmarked = isBookmarked;\r\n        }\r\n        return bookmarkedRecipe || r;\r\n      });\r\n      LocalStorage.setItem('recipes', newRecipes);\r\n      return {\r\n        ...state,\r\n        recipes: newRecipes,\r\n        selectedRecipe\r\n      }\r\n    }\r\n    case actionTypes.SAVE_RECIPE: {\r\n      const { recipe } = action as ISaveRecipeAction;\r\n      LocalStorage.setItem('recipes', [...state.recipes, recipe]);\r\n      return {\r\n        ...state,\r\n        isEditMode: false,\r\n        recipes: [...state.recipes, recipe],\r\n        selectedRecipe: recipe\r\n      }\r\n    }\r\n    case actionTypes.RESET_ALL_RECIPES: {\r\n      LocalStorage.setItem('recipes', exampleRecipeList);\r\n      return {\r\n        ...state,\r\n        recipes: exampleRecipeList,\r\n        selectedRecipe: exampleRecipeList[0]\r\n      }\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport const getRecipes = (state: IStoreState): IRecipe[] => state.recipes;\r\nexport const getBookmarkedRecipes = (state: IStoreState): IRecipe[] =>\r\n  state.recipes.filter(r => r.isBookmarked);\r\nexport const getSelectedRecipe = (state: IStoreState): IRecipe => state.selectedRecipe;\r\nexport const getEditMode = (state: IStoreState): boolean => state.isEditMode;\r\nexport const getIndexVisibility = (state: IStoreState): boolean => state.isIndexVisible;\r\nexport const getSearchValue = (state: IStoreState): string => state.searchValue;\r\nexport const getSelectedTab = (state: IStoreState): TabBarItem => state.selectedTab;\r\n\r\nexport default recipes\r\n","import * as React from 'react';\r\n\r\nexport default function Bug({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M7.074 1.408A1.42 1.42 0 0 1 8.505 0c.942 0 1.626.883 1.38 1.776-.093.336-.042.695.138.995.401.664 1.084 1.073 1.977 1.078.88-.004 1.572-.408 1.977-1.078.181-.299.231-.658.138-.995C13.869.884 14.551 0 15.495 0c.79 0 1.431.63 1.431 1.408 0 .675-.482 1.234-1.118 1.375a1.2 1.2 0 0 0-.769.548c-.613 1.017.193 1.917.93 2.823C14.759 6.716 13.445 7 12 7c-1.468 0-2.771-.277-3.975-.84.748-.92 1.555-1.803.935-2.83a1.195 1.195 0 0 0-.768-.548 1.414 1.414 0 0 1-1.118-1.374zM12 11c-1.724 0-3.355-.296-4.872-.882C5.805 13.05 5.849 21.091 12 21.984c6.085-.886 6.232-8.764 4.859-11.871A13.39 13.39 0 0 1 12 11zm6.319-2.314c.14.319.394.454.648.454.39 0 2.462-1.016 2.958-1.016.42 0 .817.249.98.657a1.034 1.034 0 0 1-.594 1.346l-2.231.866c-.479.186-.857.655-.765 1.333.09.659.652 1.052 1.227 1.052h2.402c.583 0 1.054.464 1.054 1.037s-.472 1.037-1.054 1.037h-2.387c-.558 0-1.147.332-1.277 1.136-.104.645.269 1.162.763 1.383l2.42 1.078c.53.236.766.851.526 1.373a1.062 1.062 0 0 1-1.395.518l-2.561-1.14c-.341-.152-.706-.062-.963.364A8.137 8.137 0 0 1 12 24a8.137 8.137 0 0 1-6.135-3.943c-.2-.342-.564-.409-.901-.259l-2.561 1.14a1.061 1.061 0 0 1-1.395-.518 1.031 1.031 0 0 1 .526-1.373l2.42-1.078c.523-.233.863-.734.751-1.462-.106-.685-.692-1.057-1.265-1.057H1.054C.472 15.452 0 14.988 0 14.415s.472-1.037 1.054-1.037h2.402c.552 0 1.129-.353 1.235-1.111.082-.58-.277-1.082-.773-1.274l-2.231-.866a1.033 1.033 0 0 1-.594-1.346c.212-.53.823-.796 1.367-.584.232.09 2.332.944 2.573.944.242 0 .501-.125.663-.491.18-.408.384-.787.601-1.146C8.005 8.502 9.887 9 12 9c2.08 0 3.986-.51 5.699-1.502.225.372.435.765.62 1.188z\" />\r\n    </svg>\r\n  )\r\n}\r\n","export enum IconButtonColor {\r\n  RED = 'red',\r\n  BLUE = 'blue',\r\n  GREEN = 'green',\r\n}\r\n","import { style } from 'typestyle';\r\n\r\nexport const bookmarkListItemStyle = style({\r\n  $nest: {\r\n    '& >.bookmark': {\r\n      flexBasis: '50%',\r\n      padding: '0.5rem'\r\n    },\r\n    '& >.empty': {\r\n      flexBasis: '100%',\r\n      marginTop: '1rem',\r\n      padding: '0.5rem'\r\n    }\r\n  },\r\n  alignItems: 'flex-start',\r\n  display: 'flex',\r\n  flexWrap: 'wrap'\r\n});\r\n\r\nexport const bookmarkListRecipeStyle = style({\r\n  $nest: {\r\n    '& >li>span': {\r\n      $nest: {\r\n        '&:hover': {\r\n          color: '#ff6347',\r\n          cursor: 'pointer',\r\n          textDecoration: 'underline'\r\n        }\r\n      },\r\n      color: '#ff5537',\r\n    }\r\n  },\r\n  listStyle: 'none',\r\n});\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IRecipe } from '../../_domain/IRecipe';\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport { setSelectedRecipeAction } from '../../actions/RecipeActions';\r\nimport {\r\n  getBookmarkedRecipes,\r\n  getSearchValue\r\n} from '../../RecipeReducer';\r\nimport {\r\n  bookmarkListItemStyle,\r\n  bookmarkListRecipeStyle\r\n} from './BookmarkListStyles';\r\n\r\ninterface IBookmarkListStateProps {\r\n  bookmarkedRecipes: IRecipe[];\r\n  searchValue: string;\r\n}\r\n\r\nexport interface IBookmarkListProps {\r\n  bookmarkedRecipes: IRecipe[];\r\n  searchValue: string;\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\ninterface IIndexItemDispatchProps {\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\nexport class BookmarkListComponent extends React.Component<IBookmarkListProps> {\r\n  public render() {\r\n    const bookmarkedRecipes = this.props.bookmarkedRecipes.filter(i => {\r\n      if (this.props.searchValue) {\r\n        if (i.name.toLowerCase().includes(this.props.searchValue)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    const indices = bookmarkedRecipes\r\n      .map(recipe => recipe.name[0].toUpperCase())\r\n      .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i);\r\n\r\n    const obj: any = {};\r\n    bookmarkedRecipes.forEach((recipe: IRecipe) => {\r\n      const key = recipe.name[0].toUpperCase();\r\n      if (obj.hasOwnProperty(key)) {\r\n        obj[key].push(recipe)\r\n      } else {\r\n        obj[key] = [recipe]\r\n      }\r\n    });\r\n\r\n    const indexItems = indices.sort().map(index => {\r\n      const recipeItems = obj[index].map((recipe: IRecipe, i: number) => {\r\n        return <li key={index + i}>\r\n          <span onClick={this.props.setSelectedRecipe.bind(this, recipe.name)}>\r\n            {recipe.name}\r\n          </span>\r\n        </li>\r\n      });\r\n      return <div className=\"bookmark\" key={index}>\r\n        <span>{index}({obj[index].length})</span>\r\n        <ul className={bookmarkListRecipeStyle}>\r\n          {recipeItems}\r\n        </ul>\r\n      </div>\r\n    });\r\n\r\n    const emptyBookmarkList = <div className=\"empty\">\r\n      You havn't bookmarked any recipes yet\r\n    </div>;\r\n\r\n    const emptySearchResultList = <div className=\"empty\">\r\n      No matching recipes found\r\n    </div>;\r\n\r\n    return (\r\n      <div className={bookmarkListItemStyle}>\r\n        {indexItems.length > 0 && indexItems}\r\n        {(indexItems.length < 1 && this.props.searchValue.length < 1) && emptyBookmarkList}\r\n        {(indexItems.length < 1 && this.props.searchValue.length > 0) && emptySearchResultList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStoreState, ownProps: {}): IBookmarkListStateProps => ({\r\n  bookmarkedRecipes: getBookmarkedRecipes(state),\r\n  searchValue: getSearchValue(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any): IIndexItemDispatchProps => ({\r\n  setSelectedRecipe: (recipeName: string) => dispatch(setSelectedRecipeAction(recipeName)),\r\n})\r\n\r\nexport const BookmarkList = connect(mapStateToProps, mapDispatchToProps)(BookmarkListComponent);\r\n","import * as React from 'react';\r\n\r\nimport { chipStyle } from './ChipStyles';\r\n\r\ninterface IChipProps {\r\n  onClickCallback?: (active: boolean) => void;\r\n  icon?: any;\r\n  chipText: string;\r\n}\r\n\r\nexport class Chip extends React.Component<IChipProps, any> {\r\n  constructor(props: IChipProps) {\r\n    super(props);\r\n    this.state = {\r\n      active: false\r\n    };\r\n    this.onclickHandler = this.onclickHandler.bind(this);\r\n  }\r\n\r\n  public onclickHandler() {\r\n    this.setState(\r\n      {\r\n        active: !this.state.active\r\n      },\r\n      () => {\r\n        if (this.props.onClickCallback) {\r\n          this.props.onClickCallback(this.state.active);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        className={chipStyle(this.state.active)}\r\n        onClick={this.onclickHandler}\r\n      >\r\n        {this.props.icon && <i>{this.props.icon}</i>}\r\n        {this.props.chipText}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { style } from 'typestyle';\r\n\r\nexport const chipStyle = (active: boolean) =>\r\n  style({\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '1.8rem',\r\n    fontSize: '0.8rem',\r\n    fontWeight: 'normal',\r\n    padding: '0 0.8rem',\r\n    border: '1px solid #ff5537',\r\n    borderRadius: '1rem',\r\n    backgroundColor: active ? '#ff6347' : 'transparent',\r\n    color: active ? 'white' : 'currentColor'\r\n  });\r\n","import { style } from 'typestyle';\r\n\r\nconst $black = '#1d242b';\r\nconst $green = '#38B87C';\r\nconst $red = '#F34541';\r\nconst $blue = '#2492FF';\r\n\r\nexport const iconButtonStyle = style({\r\n  background: 'transparent',\r\n  border: 0,\r\n  cursor: 'pointer',\r\n  display: 'flex',\r\n  margin: '1rem',\r\n  outline: 0,\r\n  overflow: 'hidden',\r\n});\r\n\r\nexport const iconButtonIconStyle = style({\r\n  $nest: {\r\n    '& i': {\r\n      $nest: {\r\n        '& svg': {\r\n          fill: '#fff',\r\n          height: '18px',\r\n          margin: '6px',\r\n          width: '18px',\r\n        }\r\n      },\r\n    },\r\n    '&.blue': {\r\n      $nest: {\r\n        '& svg': {\r\n          fill: $blue,\r\n        }\r\n      }\r\n    },\r\n    '&.green': {\r\n      $nest: {\r\n        '& svg': {\r\n          fill: $green,\r\n        }\r\n      }\r\n    },\r\n    '&.red': {\r\n      $nest: {\r\n        '& svg': {\r\n          fill: $red,\r\n        }\r\n      }\r\n    },\r\n  },\r\n  background: $black,\r\n  borderBottomLeftRadius: '2px',\r\n  borderTopLeftRadius: '2px',\r\n  fill: '#fff',\r\n  fontSize: '18px',\r\n  height: '30px',\r\n  lineHeight: '30px',\r\n  textAlign: 'center',\r\n  width: '30px',\r\n});\r\n\r\nexport const iconButtonTextStyle = style({\r\n  $nest: {\r\n    '&.blue': {\r\n      background: $blue,\r\n    },\r\n    '&.green': {\r\n      background: $green,\r\n    },\r\n    '&.red': {\r\n      background: $red,\r\n    }\r\n  },\r\n  background: $black,\r\n  borderBottomRightRadius: '2px',\r\n  borderTopRightRadius: '2px',\r\n  color: '#fff',\r\n  fontWeight: 'lighter',\r\n  height: '30px',\r\n  lineHeight: '30px',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  textAlign: 'center',\r\n  transition: '0.2s all',\r\n  width: '130px',\r\n});\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  iconButtonIconStyle,\r\n  iconButtonStyle,\r\n  iconButtonTextStyle\r\n} from './IconButtonStyles';\r\nimport { IconButtonColor } from './IconButttonColor';\r\n\r\ninterface IIconButtonProps {\r\n  onClickCallback?: () => void;\r\n  icon: any;\r\n  buttonText: string;\r\n  color: IconButtonColor;\r\n  styles?: string;\r\n  isSubmitButton?: boolean;\r\n}\r\n\r\nexport class IconButton extends React.Component<IIconButtonProps, any> {\r\n  public render() {\r\n    const buttonType = this.props.isSubmitButton ? 'submit' : 'button';\r\n    const callback = this.props.onClickCallback || undefined;\r\n    const buttonStyles = this.props.styles || ''\r\n    return (\r\n      <button type={buttonType} className={iconButtonStyle + ' ' + buttonStyles} onClick={callback}>\r\n        <div className={iconButtonIconStyle + ` ${this.props.color}`}>\r\n          <i>{this.props.icon}</i>\r\n        </div>\r\n        <div className={iconButtonTextStyle + ` ${this.props.color}`}>\r\n          <span>{this.props.buttonText}</span>\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Bookmark({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M13.938 2A4.068 4.068 0 0 1 18 6.042v13.54l-4-3.512-4 3.512V6.589C10 4.125 9.72 3.256 9.142 2h4.796zm0-2H4c2.834 1.042 4 3.042 4 6.589V24l6-5.269L20 24V6.042A6.062 6.062 0 0 0 13.938 0z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Danger({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 5.385a6.483 6.483 0 0 1 6.475 6.475c0 3.32-2.017 4.931-4.475 6.254V19h-4v-.886c-2.38-1.282-4.475-2.833-4.475-6.254A6.483 6.483 0 0 1 12 5.385zm0-2a8.475 8.475 0 0 0-8.475 8.475c0 3.229 1.818 6.019 4.475 7.449v2.582c.672.906 2 1.109 2 1.109v-2h1v1.999h2V21h1v2s1.328-.203 2-1.109v-2.582c2.657-1.431 4.475-4.22 4.475-7.449A8.475 8.475 0 0 0 12 3.385zM9 14.5a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm1 2.5l2-2.541L14 17h-4zm5-2.5a2 2 0 1 1 .001-4.001A2 2 0 0 1 15 14.5zm5.54 3.404l3.46 3.46L21.364 24l-3.48-3.48a10.548 10.548 0 0 0 2.656-2.616zM3.34 5.976L0 2.637 2.636 0l3.32 3.32A10.532 10.532 0 0 0 3.34 5.976zM18.044 3.32L21.364 0 24 2.637l-3.34 3.339a10.532 10.532 0 0 0-2.616-2.656zM6.116 20.52L2.636 24 0 21.364l3.46-3.46a10.548 10.548 0 0 0 2.656 2.616z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Plus({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M24 10H14V0h-4v10H0v4h10v10h4V14h10z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import { style } from 'typestyle';\r\n\r\nexport const indexListItemStyle = style({\r\n  $nest: {\r\n    '& >.recipe': {\r\n      flexBasis: '50%',\r\n      padding: '0.5rem'\r\n    },\r\n    '& >.empty': {\r\n      flexBasis: '100%',\r\n      marginTop: '1rem',\r\n      padding: '0.5rem'\r\n    }\r\n  },\r\n  alignItems: 'flex-start',\r\n  display: 'flex',\r\n  flexWrap: 'wrap'\r\n});\r\n\r\nexport const indexListRecipeStyle = style({\r\n  $nest: {\r\n    '& >li>span': {\r\n      $nest: {\r\n        '&:hover': {\r\n          color: '#ff6347',\r\n          cursor: 'pointer',\r\n          textDecoration: 'underline'\r\n        }\r\n      },\r\n      color: '#ff5537',\r\n    }\r\n  },\r\n  listStyle: 'none',\r\n});\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IRecipe } from '../../_domain/IRecipe';\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport { setSelectedRecipeAction } from '../../actions/RecipeActions';\r\nimport {\r\n  getRecipes,\r\n  getSearchValue\r\n} from '../../RecipeReducer';\r\nimport {\r\n  indexListItemStyle,\r\n  indexListRecipeStyle\r\n} from './IndexListStyles';\r\n\r\ninterface IIndexListStateProps {\r\n  recipes: IRecipe[];\r\n  searchValue: string;\r\n}\r\n\r\nexport interface IIndexListProps {\r\n  recipes: IRecipe[];\r\n  searchValue: string;\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\ninterface IIndexItemDispatchProps {\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\nexport class IndexListComponent extends React.Component<IIndexListProps> {\r\n  public render() {\r\n    const recipes = this.props.recipes.filter(i => {\r\n      if (this.props.searchValue) {\r\n        const flipLogic = i.name.length >= this.props.searchValue.length;\r\n        if (flipLogic) {\r\n          return i.name.toLowerCase().includes(this.props.searchValue);\r\n        } else {\r\n          return this.props.searchValue.toLowerCase().includes(i.name.toLowerCase())\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    const indices = recipes\r\n      .map(recipe => recipe.name[0].toUpperCase())\r\n      .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i);\r\n\r\n    const obj: any = {};\r\n    recipes.forEach((recipe: IRecipe) => {\r\n      const key = recipe.name[0].toUpperCase();\r\n      if (obj.hasOwnProperty(key)) {\r\n        obj[key].push(recipe)\r\n      } else {\r\n        obj[key] = [recipe]\r\n      }\r\n    });\r\n\r\n    const indexItems = indices.sort().map(index => {\r\n      const recipeItems = obj[index].map((recipe: IRecipe, i: number) => {\r\n        return <li key={index + i}>\r\n          <span onClick={this.props.setSelectedRecipe.bind(this, recipe.name)}>\r\n            {recipe.name}\r\n          </span>\r\n        </li>\r\n      });\r\n      return <div className='recipe' key={index}>\r\n        <span>{index}({obj[index].length})</span>\r\n        <ul className={indexListRecipeStyle}>\r\n          {recipeItems}\r\n        </ul>\r\n      </div>\r\n    });\r\n\r\n    const emptyIndexList = <div className=\"empty\">\r\n      You havn't created any recipes yet\r\n    </div>;\r\n\r\n    const emptySearchResultList = <div className=\"empty\">\r\n      No matching recipes found\r\n    </div>;\r\n\r\n    return (\r\n      <div className={indexListItemStyle}>\r\n        {indexItems.length > 0 && indexItems}\r\n        {(indexItems.length < 1 && this.props.searchValue.length < 1) && emptyIndexList}\r\n        {(indexItems.length < 1 && this.props.searchValue.length > 0) && emptySearchResultList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStoreState, ownProps: {}): IIndexListStateProps => ({\r\n  recipes: getRecipes(state),\r\n  searchValue: getSearchValue(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any): IIndexItemDispatchProps => ({\r\n  setSelectedRecipe: (recipeName: string) => dispatch(setSelectedRecipeAction(recipeName)),\r\n})\r\n\r\nexport const IndexList = connect(mapStateToProps, mapDispatchToProps)(IndexListComponent);\r\n","import * as React from 'react';\r\n\r\nexport default function Cross({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M23.954 21.03l-9.184-9.095 9.092-9.174L21.03-.046l-9.09 9.179L2.764.045l-2.81 2.81L9.14 11.96.045 21.144l2.81 2.81 9.112-9.192 9.18 9.1z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import { style } from 'typestyle';\r\n\r\nexport const searchBarStyle = style({\r\n  $nest: {\r\n    '& input': {\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n      borderBottom: '2px solid #849493',\r\n      borderRadius: 0,\r\n      color: '#ff5537',\r\n      fontFamily: 'Montserrat, sans-serif',\r\n      fontSize: '16px',\r\n      height: '50px',\r\n      lineHeight: '35px',\r\n      minWidth: '100%',\r\n      outline: 'none',\r\n      padding: 0,\r\n      width: '100%'\r\n    }\r\n  },\r\n  position: 'relative',\r\n});\r\n\r\nexport const searchbarHighlightStyle = style({\r\n  borderTop: '2px solid #ff5537',\r\n  bottom: 0,\r\n  color: 'transparent',\r\n  fontSize: '16px',\r\n  height: 0,\r\n  left: 0,\r\n  lineHeight: '35px',\r\n  maxWidth: '100%',\r\n  overflow: 'hidden',\r\n  position: 'absolute'\r\n});\r\n\r\nexport const searchBarClearStyle = style({\r\n  bottom: 0,\r\n  top: 0,\r\n  right: '10px',\r\n  height: '25px',\r\n  margin: 'auto',\r\n  cursor: 'pointer',\r\n  position: 'absolute',\r\n  fill: '#849493'\r\n});\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  map\r\n} from 'rxjs/operators';\r\n\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport { setSearchValueAction } from '../../actions/RecipeActions';\r\nimport { getSearchValue } from '../../RecipeReducer';\r\nimport Cross from '../Icons/Cross';\r\nimport {\r\n  searchBarClearStyle,\r\n  searchbarHighlightStyle,\r\n  searchBarStyle\r\n} from './SearchBarStyles';\r\n\r\ninterface ISearchBarStateProps {\r\n  searchValue: string;\r\n}\r\n\r\nexport interface ISearchBarProps {\r\n  searchValue: string;\r\n  setSearchValue: (searchValue: string) => void;\r\n}\r\n\r\ninterface ISearchBarDispatchProps {\r\n  setSearchValue: (searchValue: string) => void;\r\n}\r\n\r\ninterface ISearchBarState {\r\n  searchValue: string;\r\n}\r\n\r\nexport class SearchBarComponent extends React.Component<ISearchBarProps, ISearchBarState> {\r\n  private searchValueInputSubject = new Subject<string>();\r\n\r\n  constructor(props: ISearchBarProps) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.searchValueInputSubject\r\n      .pipe(\r\n        debounceTime(300),\r\n        map((v: string) => v.trim().toLowerCase())\r\n      ).subscribe((value: string) => {\r\n        this.props.setSearchValue(value);\r\n      })\r\n\r\n    this.state = {\r\n      searchValue: '',\r\n    };\r\n  }\r\n\r\n  public onChange(event: React.ChangeEvent) {\r\n    const { value } = (event.target as HTMLInputElement);\r\n    this.searchValueInputSubject.next(value);\r\n    this.setState({\r\n      searchValue: value,\r\n    });\r\n  }\r\n\r\n  public onClear() {\r\n    this.searchValueInputSubject.next('');\r\n    this.setState({\r\n      searchValue: '',\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const str = this.props.searchValue;\r\n    return (\r\n      <div className={searchBarStyle}>\r\n        <input\r\n          onChange={this.onChange}\r\n          placeholder='Search Recipe...'\r\n          spellCheck={false}\r\n          value={this.state.searchValue}\r\n        />\r\n        <span className={searchbarHighlightStyle}>\r\n          {str.replace(/ /g, \"\\u00a0\")}\r\n        </span>\r\n        {\r\n          str.trim() && (\r\n            <i\r\n              className={searchBarClearStyle}\r\n              onClick={this.onClear}\r\n            >\r\n              <Cross />\r\n            </i>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStoreState, ownProps: {}): ISearchBarStateProps => {\r\n  return {\r\n    searchValue: getSearchValue(state)\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any): ISearchBarDispatchProps {\r\n  return {\r\n    setSearchValue: (searchValue: string) => dispatch(setSearchValueAction(searchValue)),\r\n  };\r\n}\r\n\r\nexport const SearchBar = connect(mapStateToProps, mapDispatchToProps)(SearchBarComponent);\r\n","import { style } from 'typestyle';\r\n\r\nexport const tabBarStyle = style({\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n});\r\n\r\nexport const tabBarItemStyle = style({\r\n  $nest: {\r\n    '&.active': {\r\n      color: 'lightseagreen',\r\n    }\r\n  },\r\n  cursor: 'pointer',\r\n  marginRight: '1rem',\r\n});\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport { TabBarItem } from '../../_domain/TabBarItem';\r\nimport { setSelectedTabAction } from '../../actions/RecipeActions';\r\nimport { getSelectedTab } from '../../RecipeReducer';\r\nimport {\r\n  tabBarItemStyle,\r\n  tabBarStyle\r\n} from './TabBarStyles';\r\n\r\ninterface ITabBarStateProps {\r\n  selectedTab: TabBarItem;\r\n}\r\n\r\ninterface ITabBarDispatchProps {\r\n  setSelectedTab: (activeTab: TabBarItem) => void;\r\n}\r\n\r\ninterface ITabBarProps {\r\n  selectedTab: TabBarItem;\r\n  setSelectedTab: (activeTab: TabBarItem) => void;\r\n}\r\n\r\nexport class TabBarComponent extends React.Component<ITabBarProps> {\r\n  private tabItemList: TabBarItem[] = [TabBarItem.RECIPES, TabBarItem.BOOKMARKS];\r\n\r\n  public render() {\r\n    const tabs = this.tabItemList.map((tab: any) => {\r\n      const active = tab === this.props.selectedTab ? 'active' : '';\r\n      return <div key={tab} className={`${tabBarItemStyle} ${active}`} onClick={this.props.setSelectedTab.bind(this, tab)}>\r\n        {tab}\r\n      </div>\r\n    });\r\n    return (\r\n      <div>\r\n        <div className={tabBarStyle}>{tabs}</div>\r\n        <div className=\"underline\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStoreState, ownProps: {}): ITabBarStateProps => {\r\n  return {\r\n    selectedTab: getSelectedTab(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any): ITabBarDispatchProps => {\r\n  return {\r\n    setSelectedTab: (activeTab: TabBarItem) => dispatch(setSelectedTabAction(activeTab)),\r\n  }\r\n}\r\n\r\nexport const TabBar = connect(mapStateToProps, mapDispatchToProps)(TabBarComponent)\r\n","import { style } from 'typestyle';\r\n\r\nimport cookingImage from '../../assets/cooking01.jpg';\r\n\r\nexport const indexPageStyle = style({\r\n  $nest: {\r\n    '& .button-wrapper': {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexDirection: 'column',\r\n      margin: 'auto auto 0 auto'\r\n    }\r\n  },\r\n  backgroundColor: '#fff',\r\n  backgroundImage: `url(${cookingImage})`,\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover',\r\n  height: '100vh',\r\n  left: 0,\r\n  margin: 0,\r\n  overflow: 'hidden',\r\n  padding: '0.5rem',\r\n  position: 'fixed',\r\n  top: 0,\r\n  width: '100vw',\r\n  zIndex: 1\r\n});\r\n\r\nexport const indexPageContentStyle = style({\r\n  backgroundColor: 'rgba(255,255,255,0.75)',\r\n  borderRadius: '24px',\r\n  color: '#666',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100%',\r\n  padding: '1rem',\r\n  position: 'relative',\r\n  width: '100%'\r\n});\r\n\r\nexport const indexPageBackgroundStyle = style({\r\n  $nest: {\r\n    '& svg': {\r\n      fill: 'rgba(0,0,0,0.1)',\r\n      height: '200px',\r\n      width: '200px'\r\n    }\r\n  },\r\n  pointerEvents: 'none',\r\n  position: 'absolute',\r\n  right: '0',\r\n  top: '0'\r\n});\r\n\r\nexport const dangerButtonStyle = style({\r\n  display: 'none !important'\r\n});\r\n\r\nexport const chipContainerStyle = style({\r\n  margin: '1rem 0',\r\n  $nest: {\r\n    '*': {\r\n      marginRight: '0.5rem'\r\n    }\r\n  }\r\n});\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport { TabBarItem } from '../../_domain/TabBarItem';\r\nimport {\r\n    createRecipeAction,\r\n    resetAllRecipesAction,\r\n    setSelectedRecipeAction,\r\n} from '../../actions/RecipeActions';\r\nimport { getSelectedTab } from '../../RecipeReducer';\r\nimport { BookmarkList } from '../BookmarkList/BookmarkList';\r\nimport { Chip } from '../Chip/Chip';\r\nimport { IconButton } from '../IconButton/IconButton';\r\nimport { IconButtonColor } from '../IconButton/IconButttonColor';\r\nimport Bookmark from '../Icons/Bookmark';\r\nimport Danger from '../Icons/Danger';\r\nimport Plus from '../Icons/Plus';\r\nimport { IndexList } from '../IndexList/IndexList';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { TabBar } from '../TabBar/TabBar';\r\nimport {\r\n    chipContainerStyle,\r\n    dangerButtonStyle,\r\n    indexPageBackgroundStyle,\r\n    indexPageContentStyle,\r\n    indexPageStyle,\r\n} from './IndexPageStyles';\r\n\r\nexport interface IIndexPageProps {\r\n  createRecipe: () => void;\r\n  resetAllRecipes: () => void;\r\n  selectedTab: TabBarItem;\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\ninterface IIndexPageStateProps {\r\n  selectedTab: TabBarItem;\r\n}\r\n\r\ninterface IIndexPageDispatchProps {\r\n  createRecipe: () => void;\r\n  resetAllRecipes: () => void;\r\n  setSelectedRecipe: (recipeName: string) => void;\r\n}\r\n\r\nexport class IndexPageComponent extends React.Component<IIndexPageProps> {\r\n  public render() {\r\n    const headline = `${\r\n      this.props.selectedTab === TabBarItem.RECIPES ? 'Recipe' : 'Bookmark'\r\n    } List`;\r\n\r\n    return (\r\n      <div className={indexPageStyle}>\r\n        <div className={indexPageContentStyle}>\r\n          <h2>{headline}</h2>\r\n          <TabBar />\r\n          <SearchBar />\r\n          <div className={chipContainerStyle}>\r\n            <Chip\r\n              chipText='Breakfast'\r\n              onClickCallback={active =>\r\n                console.log('clicked chip breakfast', active, 'active?')\r\n              }\r\n            />\r\n            <Chip\r\n              chipText='Dessert'\r\n              onClickCallback={active =>\r\n                console.log('clicked chip dessert', active)\r\n              }\r\n            />\r\n          </div>\r\n          {this.props.selectedTab === TabBarItem.RECIPES && <IndexList />}\r\n          {this.props.selectedTab === TabBarItem.BOOKMARKS && <BookmarkList />}\r\n          {this.props.selectedTab === TabBarItem.BOOKMARKS && (\r\n            <div className={indexPageBackgroundStyle}>\r\n              <Bookmark />\r\n            </div>\r\n          )}\r\n          <div className='button-wrapper'>\r\n            <IconButton\r\n              styles={dangerButtonStyle}\r\n              onClickCallback={this.props.resetAllRecipes}\r\n              buttonText='Reset All Recipes'\r\n              icon={<Danger />}\r\n              color={IconButtonColor.RED}\r\n            />\r\n            <IconButton\r\n              onClickCallback={this.props.createRecipe}\r\n              buttonText='Create New Recipe'\r\n              icon={<Plus />}\r\n              color={IconButtonColor.GREEN}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IStoreState): IIndexPageStateProps {\r\n  return {\r\n    selectedTab: getSelectedTab(state)\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any): IIndexPageDispatchProps {\r\n  return {\r\n    createRecipe: () => dispatch(createRecipeAction()),\r\n    resetAllRecipes: () => dispatch(resetAllRecipesAction()),\r\n    setSelectedRecipe: (recipeName: string) =>\r\n      dispatch(setSelectedRecipeAction(recipeName))\r\n  };\r\n}\r\n\r\nexport const IndexPage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IndexPageComponent);\r\n","import * as React from 'react';\r\n\r\nexport default function Help({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M14.601 21.5a2.498 2.498 0 1 1-4.998 0c0-1.38 1.121-2.5 2.499-2.5a2.497 2.497 0 0 1 2.499 2.5zM12.181 0c-4.029 0-7.06 2.693-7.06 8h3.955c0-2.304.906-4.189 3.024-4.189 1.247 0 2.57.828 2.684 2.411.123 1.666-.767 2.511-1.892 3.582-2.924 2.78-2.816 4.049-2.816 7.196h3.943c0-1.452-.157-2.508 1.838-4.659 1.331-1.436 2.986-3.222 3.021-5.943C18.925 2.435 16.127 0 12.181 0z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Remove({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" fillRule=\"evenodd\" clipRule=\"evenodd\" {...props}>\r\n      <path d=\"M19 24H5a2 2 0 0 1-2-2V5H2V3h6V1.5C8 .673 8.673 0 9.5 0h5c.825 0 1.5.671 1.5 1.5V3h6v2h-1v17a2 2 0 0 1-2 2zm0-19H5v16.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V5zm-9 4a1 1 0 0 0-2 0v9a1 1 0 0 0 2 0V9zm6 0a1 1 0 0 0-2 0v9a1 1 0 0 0 2 0V9zm-2-7h-4v1h4V2z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import { style } from 'typestyle';\r\n\r\n// const $bg = '#313841';\r\nconst $red = '#f34541';\r\nconst $black = '#1d242b';\r\nconst $blue = '#2492ff';\r\n\r\n// body { background: $bg; color: #fff; font - family: \"Roboto\", sans - serif; font - size: 13px; } .centerMe { position: absolute; top: 50 %; left: 50 %; transform: translate(-50 %, -50 %); }\r\n\r\nexport const confirmationButtonStyle = style({\r\n  background: 'transparent',\r\n  border: 0,\r\n  cursor: 'pointer',\r\n  display: 'flex',\r\n  margin: '1rem',\r\n  outline: 0,\r\n  overflow: 'hidden',\r\n});\r\n\r\nexport const confirmationButtonIconStyle = style({\r\n  $nest: {\r\n    '& i': {\r\n      $nest: {\r\n        '& svg': {\r\n          height: '18px',\r\n          margin: '6px',\r\n          width: '18px',\r\n        }\r\n      },\r\n      transition: '0.2s color, 0s fill',\r\n    },\r\n    '&.confirm': {\r\n      $nest: {\r\n        '& svg': {\r\n          transform: 'translateY(-40px)',\r\n        }\r\n      },\r\n      fill: $blue,\r\n    },\r\n    '&.delete': {\r\n      fill: $red\r\n    },\r\n    '&::after': {\r\n      background: $black,\r\n      content: ' ',\r\n      display: 'block',\r\n      height: '5px',\r\n      position: 'absolute',\r\n      right: '1px',\r\n      top: '12.5px',\r\n      transform: 'rotate(45deg)',\r\n      width: '5px',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  background: $black,\r\n  borderBottomLeftRadius: '2px',\r\n  borderTopLeftRadius: '2px',\r\n  fill: '#fff',\r\n  fontSize: '18px',\r\n  height: '30px',\r\n  lineHeight: '30px',\r\n  position: 'relative',\r\n  textAlign: 'center',\r\n  transition: '0.2s color, 0s fill',\r\n  width: '30px',\r\n});\r\n\r\nexport const confirmationButtonTextStyle = style({\r\n  $nest: {\r\n    '&.confirm': {\r\n      background: $blue\r\n    }\r\n  },\r\n  background: $red,\r\n  borderBottomRightRadius: '2px',\r\n  borderTopRightRadius: '2px',\r\n  color: '#fff',\r\n  fontWeight: 'lighter',\r\n  height: '30px',\r\n  lineHeight: '30px',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  textAlign: 'center',\r\n  transition: '0.2s all',\r\n  width: '130px',\r\n});\r\n","import * as React from 'react';\r\n\r\nimport Help from '../Icons/Help';\r\nimport Remove from '../Icons/Remove';\r\nimport {\r\n  confirmationButtonIconStyle,\r\n  confirmationButtonStyle,\r\n  confirmationButtonTextStyle\r\n} from './ConfirmationButtonStyles';\r\n\r\ninterface IConfirmationButtonProps {\r\n  onConfirmCallback: () => void\r\n}\r\n\r\nexport class ConfirmationButton extends React.Component<IConfirmationButtonProps, any> {\r\n  private defaultText = 'Delete Recipe';\r\n\r\n  constructor(props: IConfirmationButtonProps) {\r\n    super(props);\r\n    this.state = {\r\n      buttonText: this.defaultText,\r\n      status: 'delete',\r\n    };\r\n    this.onclickHandler = this.onclickHandler.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  public reset() {\r\n    this.setState({\r\n      buttonText: this.defaultText,\r\n      status: 'delete',\r\n    });\r\n  }\r\n\r\n  public onclickHandler() {\r\n    if (this.state.status === 'delete') {\r\n      this.setState({\r\n        buttonText: 'Are you sure?',\r\n        status: 'confirm',\r\n      });\r\n      setTimeout(() => {\r\n        this.reset();\r\n      }, 2000);\r\n    } else {\r\n      this.props.onConfirmCallback();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <button className={confirmationButtonStyle} onClick={this.onclickHandler}>\r\n        <div className={confirmationButtonIconStyle + ` ${this.state.status}`}>\r\n          <i className='delete'><Remove /></i>\r\n          <i className='confirm'><Help /></i>\r\n        </div>\r\n        <div className={confirmationButtonTextStyle + ` ${this.state.status}`}>\r\n          <span>{this.state.buttonText}</span>\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Edit({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M18.363 8.464l1.433 1.431-12.67 12.669L.001 24l1.439-7.127L14.105 4.205l1.431 1.431L3.281 17.86l-.726 3.584 3.584-.723L18.363 8.464zM18.307 0l-2.815 2.817 5.691 5.692L24 5.688 18.307 0zM5.989 18.718L17.302 7.402l-.705-.707L5.284 18.009l.705.709z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function HeartFilled({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} {...props}>\r\n      <path d=\"M12 4.419C9.174-1.276.001.355.001 7.689.001 14.959 9.904 18.627 12 23c2.096-4.373 12-8.041 12-15.311 0-7.327-9.17-8.972-12-3.27z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function HeartOutlined({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} {...props}>\r\n      <path d=\"M17.516 3c2.382 0 4.487 1.564 4.487 4.712 0 4.963-6.528 8.297-10.003 11.935C8.525 16.009 1.998 12.676 1.998 7.713 1.998 4.658 4.006 3 6.485 3 9.665 3 11.331 6.644 12 8.312 12.667 6.646 14.333 3 17.516 3zm0-2C15.342 1 13.17 2.062 12 4.419 10.83 2.062 8.658 1 6.485 1 3.082 1 .001 3.39.001 7.689.001 14.959 9.904 18.627 12 23c2.096-4.373 12-8.041 12-15.311C24 3.103 20.586 1 17.516 1z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function Left({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} {...props}>\r\n      <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167L16.67 24 4.5 12.004z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import { style } from 'typestyle';\r\n\r\nimport cookingImage from '../../assets/cooking04.jpg';\r\n\r\nexport const recipeStyle = style({\r\n  backgroundImage: `url(${cookingImage})`,\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover',\r\n  minHeight: '100%'\r\n});\r\n\r\nexport const recipeContentStyle = style({\r\n  backgroundColor: 'rgba(255, 255, 255, 0.55)',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minHeight: '55vh',\r\n  width: '100%'\r\n});\r\n\r\nexport const recipeOverlayStyle = style({\r\n  $nest: {\r\n    '& span': {\r\n      $nest: {\r\n        '& svg': {\r\n          $nest: {\r\n            '&:hover': {\r\n              cursor: 'pointer'\r\n            }\r\n          },\r\n          fill: '#FF6C79'\r\n        }\r\n      },\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.65)',\r\n      borderRadius: '50%',\r\n      display: 'flex',\r\n      height: '36px',\r\n      justifyContent: 'center',\r\n      width: '36px'\r\n    },\r\n    '& span.back': {\r\n      $nest: {\r\n        '& svg': {\r\n          marginRight: '4px'\r\n        }\r\n      }\r\n    },\r\n    '& span.bookmark': {\r\n      $nest: {\r\n        '& svg': {\r\n          marginTop: '2px'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  left: '0',\r\n  margin: '0 1rem',\r\n  position: 'absolute',\r\n  right: '0',\r\n  top: '1rem'\r\n});\r\n\r\nexport const recipeTitleStyle = style({\r\n  color: '#FF6C79',\r\n  marginBottom: '1.5rem',\r\n  marginTop: '1rem',\r\n  textAlign: 'center'\r\n});\r\n\r\nexport const recipeImageStyle = style({\r\n  height: '45vh',\r\n  margin: '0 auto',\r\n  width: '100%'\r\n});\r\n\r\nexport const timingWrapperStyle = style({\r\n  $nest: {\r\n    '& h3': {\r\n      color: '#8e8e8e',\r\n      fontSize: '0.8rem',\r\n      textTransform: 'uppercase'\r\n    }\r\n  },\r\n  color: '#333',\r\n  display: 'flex',\r\n  fontSize: '0.9rem',\r\n  fontWeight: 'bold',\r\n  justifyContent: 'space-around',\r\n  textAlign: 'center'\r\n});\r\n\r\nexport const recipeIngredientStyle = style({\r\n  $nest: {\r\n    '& h3': {\r\n      color: '#8e8e8e',\r\n      fontSize: '1rem',\r\n      margin: '2rem 0 0.8rem 0',\r\n      textTransform: 'uppercase'\r\n    },\r\n    '& span': {\r\n      lineHeight: '1.25rem'\r\n    }\r\n  },\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  fontSize: '0.9rem',\r\n  justifyContent: 'space-around',\r\n  textAlign: 'center',\r\n  margin: '0 3rem'\r\n});\r\n\r\nexport const recipeInstructionStyle = style({\r\n  $nest: {\r\n    '& h3': {\r\n      color: '#8e8e8e',\r\n      fontSize: '1rem',\r\n      margin: '2rem 0 0.8rem 0',\r\n      textTransform: 'uppercase'\r\n    },\r\n    '& span': {\r\n      lineHeight: '1.25rem',\r\n      margin: '0 3rem',\r\n      whiteSpace: 'pre-line'\r\n    }\r\n  },\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  fontSize: '0.9rem',\r\n  justifyContent: 'space-around',\r\n  textAlign: 'justify'\r\n});\r\n\r\nexport const buttonWrapperStyle = style({\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginTop: 'auto'\r\n});\r\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { IRecipe } from '../../_domain/IRecipe';\nimport { IStoreState } from '../../_domain/IStoreState';\nimport {\n  deleteRecipeAction,\n  setBookmarkAction,\n  setEditModeAction,\n  setIndexVisibilityAction\n} from '../../actions/RecipeActions';\nimport { getSelectedRecipe } from '../../RecipeReducer';\nimport { ConfirmationButton } from '../ConfirmationButton/ConfirmationButton';\nimport { IconButton } from '../IconButton/IconButton';\nimport { IconButtonColor } from '../IconButton/IconButttonColor';\nimport Edit from '../Icons/Edit';\nimport HeartFilled from '../Icons/HeartFilled';\nimport HeartOutlined from '../Icons/HeartOutlined';\nimport Left from '../Icons/Left';\nimport {\n  buttonWrapperStyle,\n  recipeContentStyle,\n  recipeImageStyle,\n  recipeIngredientStyle,\n  recipeInstructionStyle,\n  recipeOverlayStyle,\n  recipeStyle,\n  recipeTitleStyle,\n  timingWrapperStyle\n} from './RecipeStyles';\n\ninterface IRecipeStateProps {\n  selectedRecipe: IRecipe;\n}\n\ninterface IRecipeDispatchProps {\n  bookmarkRecipe: (recipeName: string, isBookmarked: boolean) => void;\n  deleteRecipe: (recipe: IRecipe) => void;\n  setEditMode: () => void;\n  showIndex: () => void;\n}\n\ninterface IRecipeProps {\n  bookmarkRecipe: (recipeName: string, isBookmarked: boolean) => void;\n  deleteRecipe: (recipe: IRecipe) => void;\n  selectedRecipe: IRecipe;\n  setEditMode: () => void;\n  showIndex: () => void;\n}\n\nexport class RecipeComponent extends React.Component<IRecipeProps> {\n  constructor(props: IRecipeProps) {\n    super(props);\n    this.bookmarkHandler = this.bookmarkHandler.bind(this);\n  }\n\n  public getBookmarkText() {\n    return this.props.selectedRecipe && this.props.selectedRecipe.isBookmarked\n      ? <HeartFilled />\n      : <HeartOutlined />;\n  }\n\n  public bookmarkHandler() {\n    const selectedRecipe = this.props.selectedRecipe;\n    if (selectedRecipe) {\n      this.props.bookmarkRecipe(selectedRecipe.name, !selectedRecipe.isBookmarked);\n    }\n  }\n\n  public render(): JSX.Element {\n\n    const ingredientList = this.props.selectedRecipe\n      && this.props.selectedRecipe.ingredients\n      && this.props.selectedRecipe.ingredients.map((ingredient: string, i: number) =>\n        <span key={i + ingredient}>{ingredient}</span>\n      );\n\n    let ImageStyle = {};\n    if (this.props.selectedRecipe && this.props.selectedRecipe.imageUrl) {\n      ImageStyle = {\n        backgroundImage: 'url(' + this.props.selectedRecipe.imageUrl + ')',\n        backgroundSize: 'cover',\n      };\n    }\n\n    return (\n      <div className={recipeStyle}>\n        <div className={recipeOverlayStyle}>\n          <span className='back' onClick={this.props.showIndex}><Left /></span>\n          <span className='bookmark' onClick={this.bookmarkHandler}>{this.getBookmarkText()}</span>\n        </div>\n        <div className={recipeImageStyle} style={ImageStyle} />\n        <div className={recipeContentStyle}>\n          <h2 className={recipeTitleStyle}>\n            {this.props.selectedRecipe && this.props.selectedRecipe.name}\n          </h2>\n          <div className={timingWrapperStyle}>\n            <div>\n              <h3>Preparation</h3>\n              <span>{this.props.selectedRecipe && this.props.selectedRecipe.preparationTime\n                ? `${this.props.selectedRecipe.preparationTime}min`\n                : `n/a`}</span>\n            </div>\n            <div>\n              <h3>Cooking</h3>\n              <span>{this.props.selectedRecipe && this.props.selectedRecipe.cookingTime\n                ? `${this.props.selectedRecipe.cookingTime}min`\n                : `n/a`}</span>\n            </div>\n            <div>\n              <h3>Difficulty</h3>\n              <span>{this.props.selectedRecipe ? this.props.selectedRecipe.difficulty : ''}</span>\n            </div>\n          </div>\n          <div className={recipeIngredientStyle}>\n            <h3>Ingredients</h3>\n            {ingredientList}\n          </div>\n          <div className={recipeInstructionStyle}>\n            <h3>Instructions</h3>\n            <span>{this.props.selectedRecipe ? this.props.selectedRecipe.instructions : ''}</span>\n          </div>\n          <div className={buttonWrapperStyle}>\n            <IconButton onClickCallback={this.props.setEditMode} buttonText='Edit Recipe' icon={<Edit />} color={IconButtonColor.GREEN} />\n            <ConfirmationButton onConfirmCallback={this.props.deleteRecipe.bind(this, this.props.selectedRecipe)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStoreState, ownProps: {}): IRecipeStateProps => {\n  return {\n    selectedRecipe: getSelectedRecipe(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any): IRecipeDispatchProps => {\n  return {\n    bookmarkRecipe: (recipeName: string, isBookmarked: boolean) => dispatch(setBookmarkAction(recipeName, isBookmarked)),\n    deleteRecipe: (recipe: IRecipe) => dispatch(deleteRecipeAction(recipe)),\n    setEditMode: () => dispatch(setEditModeAction(true)),\n    showIndex: () => dispatch(setIndexVisibilityAction(true))\n  }\n}\n\nexport const Recipe = connect(mapStateToProps, mapDispatchToProps)(RecipeComponent)\n","import { style } from 'typestyle';\r\n\r\nimport cookingImage from '../../assets/cooking04.jpg';\r\n\r\nconst red = '#F34541';\r\nconst green = '#38B87C';\r\n\r\nexport const buttonWrapperStyle = style({\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginTop: 'auto',\r\n});\r\n\r\nexport const recipeFormContentStyle = style({\r\n  backgroundColor: 'rgba(255,255,255,0.55)',\r\n  color: '#666',\r\n  height: '100%',\r\n  padding: '1rem',\r\n  position: 'relative',\r\n  width: '100%',\r\n  minHeight: '100vh',\r\n});\r\n\r\nexport const formStyle = style({\r\n  alignItems: 'flex-start',\r\n  backgroundImage: `url(${cookingImage})`,\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minHeight: '100%',\r\n});\r\n\r\nexport const recipeFormFieldStyle = style({\r\n  $nest: {\r\n    '& >small': {\r\n      color: red\r\n    },\r\n    '& label>small': {\r\n      fontWeight: 'bold'\r\n    },\r\n    '& >textarea': {\r\n      resize: 'none'\r\n    }\r\n  },\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  margin: '0.5rem 0',\r\n});\r\n\r\nexport const recipeFormFieldInputStyle = style({\r\n  display: 'flex',\r\n  margin: '0.2rem',\r\n});\r\n\r\nexport const recipeFormIngredientIconStyle = style({\r\n  $nest: {\r\n    '& >svg': {\r\n      height: '18px',\r\n      width: '18px',\r\n      margin: '6px',\r\n    },\r\n    '&.remove >svg': {\r\n      fill: red\r\n    },\r\n    '&.add >svg': {\r\n      fill: green\r\n    },\r\n  },\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n});\r\n","import * as Yup from 'yup';\r\n\r\nexport const RecipeValidationSchema = Yup.object().shape({\r\n  imageUrl: Yup.string(),\r\n  name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('This field is required'),\r\n  preparationTime: Yup.string()\r\n    .required('This field is required')\r\n    .matches(/^[0-9]*$/, 'Must be a number'),\r\n  cookingTime: Yup.string()\r\n    .required('This field is required')\r\n    .matches(/^[0-9]*$/, 'Must be a number'),\r\n  instructions: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .required('This field is required'),\r\n});\r\n","import {\r\n  Field,\r\n  FieldArray,\r\n  FieldProps,\r\n  Form,\r\n  Formik,\r\n  FormikProps\r\n} from 'formik';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { emptyRecipe } from '../../_config/exampleRecipeList';\r\nimport { Difficulty } from '../../_domain/Difficulty';\r\nimport { IRecipe } from '../../_domain/IRecipe';\r\nimport { IStoreState } from '../../_domain/IStoreState';\r\nimport {\r\n  saveRecipeAction,\r\n  setEditModeAction,\r\n  setIndexVisibilityAction,\r\n  updateRecipeAction\r\n} from '../../actions/RecipeActions';\r\nimport { getSelectedRecipe } from '../../RecipeReducer';\r\nimport { IconButton } from '../IconButton/IconButton';\r\nimport { IconButtonColor } from '../IconButton/IconButttonColor';\r\nimport Cross from '../Icons/Cross';\r\nimport Edit from '../Icons/Edit';\r\nimport Plus from '../Icons/Plus';\r\nimport Remove from '../Icons/Remove';\r\nimport {\r\n  buttonWrapperStyle,\r\n  formStyle,\r\n  recipeFormContentStyle,\r\n  recipeFormFieldInputStyle,\r\n  recipeFormFieldStyle,\r\n  recipeFormIngredientIconStyle\r\n} from './RecipeFormStyles';\r\nimport { RecipeValidationSchema } from './RecipeValidationSchema';\r\n\r\ninterface IRecipeFormValues {\r\n  cookingTime: string;\r\n  difficulty: Difficulty;\r\n  imageUrl: string;\r\n  ingredients: string[];\r\n  instructions: string;\r\n  name: string;\r\n  preparationTime: string;\r\n}\r\n\r\nexport interface IRecipeFormProps {\r\n  disableEditMode: () => void;\r\n  saveRecipeAction: (recipe: IRecipe) => void;\r\n  selectedRecipe: IRecipe;\r\n  showIndex: () => void;\r\n  updateRecipeAction: (recipe: IRecipe, recipeName: string) => void;\r\n}\r\n\r\ninterface IRecipeFormStateProps {\r\n  selectedRecipe: IRecipe;\r\n}\r\n\r\ninterface IRecipeFormDispatchProps {\r\n  disableEditMode: () => void;\r\n  saveRecipeAction: (recipe: IRecipe) => void;\r\n  showIndex: () => void;\r\n  updateRecipeAction: (recipe: IRecipe, recipeName: string) => void;\r\n}\r\n\r\ninterface IRecipeFormState {\r\n  cookingTime: number;\r\n  difficulty: Difficulty;\r\n  imageUrl: string;\r\n  ingredients: string[];\r\n  instructions: string;\r\n  name: string;\r\n  preparationTime: number;\r\n}\r\n\r\nexport class RecipeFormComponent extends React.Component<IRecipeFormProps, IRecipeFormState> {\r\n\r\n  constructor(props: IRecipeFormProps) {\r\n    super(props);\r\n    const {\r\n      cookingTime,\r\n      difficulty,\r\n      imageUrl,\r\n      ingredients,\r\n      instructions,\r\n      name,\r\n      preparationTime,\r\n    } = this.props.selectedRecipe || emptyRecipe;\r\n    this.state = {\r\n      cookingTime,\r\n      difficulty,\r\n      imageUrl,\r\n      ingredients,\r\n      instructions,\r\n      name,\r\n      preparationTime,\r\n    };\r\n    this.saveRecipe = this.saveRecipe.bind(this);\r\n    this.cancelHandler = this.cancelHandler.bind(this);\r\n  }\r\n\r\n  public saveRecipe(formValues: any) {\r\n    const { name, preparationTime, cookingTime, imageUrl, difficulty, instructions, ingredients } = formValues;\r\n    const recipe = {\r\n      ...this.props.selectedRecipe,\r\n      cookingTime: Number(cookingTime),\r\n      difficulty,\r\n      imageUrl,\r\n      ingredients: ingredients.filter((ingredient: string) => !!ingredient.trim()),\r\n      instructions,\r\n      name,\r\n      preparationTime: Number(preparationTime),\r\n    };\r\n    if (this.props.selectedRecipe) {\r\n      this.props.updateRecipeAction(recipe, this.props.selectedRecipe.name);\r\n    } else {\r\n      this.props.saveRecipeAction(recipe);\r\n    }\r\n  }\r\n\r\n  public cancelHandler() {\r\n    if (this.props.selectedRecipe) {\r\n      this.props.disableEditMode();\r\n    } else {\r\n      this.props.disableEditMode();\r\n      this.props.showIndex();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const difficultyOptions = Object.keys(Difficulty).map((d: any) =>\r\n      <option key={d} value={Difficulty[d]}>{Difficulty[d]}</option>\r\n    );\r\n\r\n    return (\r\n      <div className={formStyle}>\r\n        <div className={recipeFormContentStyle}>\r\n          <h2>\r\n            {this.props.selectedRecipe ? 'Edit Recipe' : 'Create New Recipe'}\r\n          </h2>\r\n          <Formik\r\n            initialValues={{\r\n              cookingTime: String(this.state.cookingTime),\r\n              imageUrl: this.state.imageUrl,\r\n              name: this.state.name,\r\n              preparationTime: String(this.state.preparationTime),\r\n              difficulty: this.state.difficulty,\r\n              instructions: this.state.instructions,\r\n              ingredients: this.state.ingredients,\r\n            }}\r\n            validationSchema={RecipeValidationSchema}\r\n            onSubmit={this.saveRecipe}\r\n            render={(formikBag: FormikProps<IRecipeFormValues>) => (\r\n              <Form>\r\n                <Field\r\n                  name=\"imageUrl\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='imageUrl'><small>Image Url</small></label>\r\n                      <input type=\"text\" {...field} placeholder=\"Add a preview image url\" />\r\n                      {form.touched.imageUrl && form.errors.imageUrl && <small>{form.errors.imageUrl}</small>}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"name\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='name'><small>Recipe name</small></label>\r\n                      <input type=\"text\" {...field} placeholder=\"Add a recipe name\" />\r\n                      {form.touched.name && form.errors.name && <small>{form.errors.name}</small>}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"preparationTime\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='preparationTime'><small>Preparation time in minutes</small></label>\r\n                      <input type=\"text\" {...field} placeholder=\"Add a preparation time in min\" />\r\n                      {form.touched.preparationTime && form.errors.preparationTime && <small>{form.errors.preparationTime}</small>}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"cookingTime\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='cookingTime'><small>Cooking time in minutes</small></label>\r\n                      <input type=\"text\" {...field} placeholder=\"Add a cooking time in min\" />\r\n                      {form.touched.cookingTime && form.errors.cookingTime && <small>{form.errors.cookingTime}</small>}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"difficulty\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='difficulty'><small>Difficulty</small></label>\r\n                      <select {...field}>\r\n                        {difficultyOptions}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"instructions\"\r\n                  render={({ field, form }: FieldProps<IRecipeFormValues>) => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='instructions'><small>Instructions</small></label>\r\n                      <textarea rows={8} {...field} placeholder=\"Add your cooking instructions here\" />\r\n                      {form.touched.instructions && form.errors.instructions && <small>{form.errors.instructions}</small>}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <FieldArray\r\n                  name=\"ingredients\"\r\n                  render={arrayHelpers => (\r\n                    <div className={recipeFormFieldStyle}>\r\n                      <label htmlFor='ingredients'><small>Ingredients</small></label>\r\n                      {formikBag.values.ingredients && formikBag.values.ingredients.length > 0 ? (\r\n                        formikBag.values.ingredients.map((ingredient, index) => (\r\n                          <div key={index} className={recipeFormFieldInputStyle}>\r\n                            <Field name={`ingredients.${index}`} value={formikBag.values.ingredients[index]} />\r\n                            <i className={recipeFormIngredientIconStyle + ' remove'} onClick={() => arrayHelpers.remove(index)}><Remove /></i>\r\n                            <i className={recipeFormIngredientIconStyle + ' add'} onClick={() => arrayHelpers.push('')}><Plus /></i>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                          <IconButton\r\n                            onClickCallback={() => arrayHelpers.push('')}\r\n                            buttonText='Add an ingredient'\r\n                            icon={<Plus />}\r\n                            color={IconButtonColor.GREEN}\r\n                          />\r\n                        )}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <div className={buttonWrapperStyle}>\r\n                  <IconButton\r\n                    isSubmitButton={true}\r\n                    buttonText='Save Recipe'\r\n                    icon={<Edit />}\r\n                    color={IconButtonColor.GREEN}\r\n                  />\r\n                  <IconButton\r\n                    onClickCallback={this.cancelHandler}\r\n                    buttonText='Cancel'\r\n                    icon={<Cross />}\r\n                    color={IconButtonColor.RED}\r\n                  />\r\n                </div>\r\n              </Form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStoreState, ownProps: {}): IRecipeFormStateProps => {\r\n  return {\r\n    selectedRecipe: getSelectedRecipe(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any): IRecipeFormDispatchProps => {\r\n  return {\r\n    disableEditMode: () => dispatch(setEditModeAction(false)),\r\n    saveRecipeAction: (recipe: IRecipe) => dispatch(saveRecipeAction(recipe)),\r\n    showIndex: () => dispatch(setIndexVisibilityAction(true)),\r\n    updateRecipeAction: (recipe: IRecipe, recipeName: string) => dispatch(updateRecipeAction(recipe, recipeName))\r\n  }\r\n}\r\n\r\nexport const RecipeForm = connect(mapStateToProps, mapDispatchToProps)(RecipeFormComponent)\r\n","import { style } from 'typestyle';\r\n\r\nexport const recipeBookStyle = style({\r\n  $nest: {\r\n    '& .recipe-container': {\r\n      backgroundColor: 'white',\r\n      height: '100%',\r\n      overflowY: 'auto',\r\n      position: 'relative',\r\n      transform: 'translateX(100%)',\r\n      transition: 'all 0.4s ease',\r\n      width: '100%',\r\n      zIndex: 2\r\n    },\r\n    '& .recipe-container.visible': {\r\n      transform: 'translateX(0%)',\r\n    }\r\n  },\r\n  height: '100vh',\r\n  overflowX: 'hidden',\r\n  width: '100vw'\r\n});\r\n\r\nexport const bugStyle = style({\r\n  $nest: {\r\n    '& svg': {\r\n      $nest: {\r\n        '&:hover': {\r\n          fill: '#ff5537',\r\n          cursor: 'pointer'\r\n        }\r\n      },\r\n      fill: '#666',\r\n      transform: 'rotate(45deg)',\r\n    }\r\n  },\r\n  width: '35px',\r\n  height: '35px',\r\n  borderTopLeftRadius: '100%',\r\n  position: 'absolute',\r\n  top: '0.5rem',\r\n  right: '0.5rem',\r\n  zIndex: 1,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n});\r\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { IStoreState } from '../../_domain/IStoreState';\nimport { setSelectedRecipeAction } from '../../actions/RecipeActions';\nimport {\n  getEditMode,\n  getIndexVisibility\n} from '../../RecipeReducer';\nimport Bug from '../Icons/Bug';\nimport { IndexPage } from '../IndexPage/IndexPage';\nimport { Recipe } from '../Recipe/Recipe';\nimport { RecipeForm } from '../RecipeForm/RecipeForm';\nimport {\n  bugStyle,\n  recipeBookStyle\n} from './RecipeBookStyles';\n\ninterface IRecipeBookStateProps {\n  isIndexVisible: boolean;\n  isEditMode: boolean;\n}\n\ninterface IRecipeBookDispatchProps {\n  setSelectedRecipe: (recipeName: string) => void;\n}\n\ninterface IRecipeBookProps {\n  isIndexVisible: boolean;\n  isEditMode: boolean;\n  setSelectedRecipe: (recipeName: string) => void;\n}\n\nconst mapStateToProps = (state: IStoreState): IRecipeBookStateProps => {\n  return {\n    isEditMode: getEditMode(state),\n    isIndexVisible: getIndexVisibility(state)\n  };\n}\n\nconst mapDispatchToProps = (dispatch: any): IRecipeBookDispatchProps => {\n  return {\n    setSelectedRecipe: (recipeName: string) =>\n      dispatch(setSelectedRecipeAction(recipeName)),\n  };\n}\n\nexport class RecipeBookComponent extends React.Component<IRecipeBookProps> {\n  constructor(props: IRecipeBookProps) {\n    super(props);\n    this.setRecipeName = this.setRecipeName.bind(this);\n  }\n\n  public setRecipeName(recipeName: string) {\n    this.props.setSelectedRecipe(recipeName);\n  }\n\n  public render(): JSX.Element {\n    const isEditMode = this.props.isEditMode;\n    const recipeContainerClass = this.props.isIndexVisible ? \"recipe-container\" : \"recipe-container visible\";\n\n    return (\n      <div>\n        <div className={recipeBookStyle}>\n          <IndexPage />\n          <div className={recipeContainerClass}>\n            {isEditMode ? <RecipeForm /> : <Recipe />}\n          </div>\n        </div>\n        <a href='https://github.com/Knochenmark/recipebox/issues' title='Report a bug' className={bugStyle}>\n          <Bug />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport const RecipeBook = connect(mapStateToProps, mapDispatchToProps)(RecipeBookComponent)\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './styles/index.css';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport { RecipeBook } from './components/RecipeBook/RecipeBook';\nimport recipeReducer from './RecipeReducer';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(recipeReducer as any)\n\nconsole.log(\"store\", store.getState());\n\nexport const unsubscribe = store.subscribe(() =>\n  console.log(\"State Changed\", store.getState())\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <RecipeBook />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n)\nregisterServiceWorker();\n"],"sourceRoot":""}